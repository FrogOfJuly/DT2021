\import Utils

-- 1. Определите полиморфный tail для списков.
\func tail {A : \Type} (l : List A) : List A \elim l
  | nil => nil {A}
  | :: a xs => xs
-- 2 . Реализуйте любой (but choose wisely) алгоритм сортировки. Функцию сравнения можно принимать в качестве аргумента.

\func sort {A : \Type} (cmp : A -> A -> Bool) (l : List A) : List A => from-tree (to-tree l)
  \where {
    \data Tree (A' : \Type)
      | branch (Tree A') A' (Tree A')
      | leaf
    \func to-tree {A' : \Type} (f : A' -> Bool) (l : List A') : Tree A' \elim l
      | nil => leaf
      | :: a l => branch
          (to-tree f (filter {A'} f l))
          a
          (to-tree f (filter {A'} (\lam x => not (f x)) l))
        \where {
          \func filter {A'' : \Type} (f : A'' -> Bool) (l' : List A'') : List A'' \elim  l'
            | nil => nil
            | :: a l' => \case f a \with {
              | true => :: a (filter f l')
              | false => filter f l'
            }
        }

    \func from-tree {A' : \Type} (t : Tree A') : List A'
      | branch t1 a t2 => (from-tree t1) ++ (:: a nil) ++ (from-tree t2)
      | leaf => nil
  }

--  from-tree {A} ( to-tree {A} l)
--  \where {
--    \data CmpTree (A' : \Type)
--        | leaf
--        | branch (CmpTree A') A' (CmpTree A')
--    \func to-tree {A' : \Type} (l : List A') : CmpTree A' => {?}
--    \func from-tree {A' : \Type} (t : CmpTree A') : List A' => {?}
--  }

-- 3. Докажите ассоциативность && и ||.

\func &&-assoc (x y z : Bool) : (x && y) && z = x && (y && z) => {?}

\func ||-assoc (x y z : Bool) : (x || y) || z = x || (y || z) => {?}

-- 4. Докажите, что fac 3 равно 6.

-- 5. Докажите следующие пропозициональные тавтологии (choose 2 out of 3).

-- t1 : (P and Q -> R) -> P -> Q -> R
\func t1 {P Q R : \Type} (f : \Sigma P Q -> R) (p : P) (q : Q) : R => {?}

-- t2 : (P -> R) -> (Q -> R) -> P or Q -> R
\func t2 {P Q R : \Type} (f : P -> R) (g : Q -> R) (h : Either P Q) : R => {?}

-- t3 : ((P -> Q -> R) -> P) -> (P -> R) -> R
\func t3 {P Q R : \Type} (f : (P -> Q -> R) -> P) (g : P -> R) : R => {?}

-- 6. Сформулируйте и докажите следующие пропозициональные тавтологии (choose 2 out of 3).

-- t4 : (P -> Q -> R) -> P and Q -> R
-- t5 : (P or Q -> P and Q) -> (P -> Q) and (Q -> P)
-- t6 : ((((P -> Q) -> P) -> P) -> Q) -> Q

-- 7. Докажите следующие утверждения.

-- s1 : Если для любого x : Nat верно P(x), то существует x : Nat для которого P(x) верно.
\func s1 (P : Nat -> \Type) (h : \Pi (x : Nat) -> P x) : \Sigma (x : Nat) (P x) => {?}

-- s2 : Если не существует x : Nat такого, что верно P(x), то P(3) не верно.
\func s2 (P : Nat -> \Type) (h : \Sigma (x : Nat) (P x) -> Empty) : P 3 -> Empty => {?}

-- 8. Сформулируйте и докажите следующие утверждения.

-- s3 : Если для всех x : Nat верно, что P(x) влечет Q(x), и существует x : Nat для которого верно P(x), то существует x : Nat для которого верно Q(x).

-- s4 : Если для всех x : Nat либо не верно P(x), либо не верно Q(x), то P(3) влечет, что Q(3) не верно.
